function Maze.new 2
push constant 4
call Memory.alloc 1
pop pointer 0
push constant 256
push argument 1
push constant 2
call Math.multiply 2
call Math.divide 2
pop this 0
push argument 0
pop this 3
push constant 0
pop local 0
push constant 450
pop this 1
push argument 1
pop this 2
push constant 0
pop local 1
label WHILE_EXP0
push local 0
push this 2
lt
not
if-goto WHILE_END0
push local 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
push constant 2
push local 0
call Math.multiply 2
push this 0
call Math.multiply 2
push this 1
push constant 2
push local 0
call Math.multiply 2
push constant 1
add
push this 0
call Math.multiply 2
call Screen.drawRectangle 4
pop temp 0
goto IF_END0
label IF_FALSE0
push constant 512
push this 1
sub
push constant 2
push local 0
call Math.multiply 2
push this 0
call Math.multiply 2
push constant 511
push constant 2
push local 0
call Math.multiply 2
push constant 1
add
push this 0
call Math.multiply 2
call Screen.drawRectangle 4
pop temp 0
label IF_END0
push local 0
push constant 1
add
pop local 0
push local 1
not
pop local 1
goto WHILE_EXP0
label WHILE_END0
push this 0
push constant 2
call Math.divide 2
push constant 255
push this 0
push constant 2
call Math.divide 2
sub
push this 0
push constant 4
call Math.divide 2
call Screen.drawCircle 3
pop temp 0
push pointer 0
return
function Maze.isPixelClear 7
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
pop local 6
label WHILE_EXP0
push local 0
push this 2
lt
not
if-goto WHILE_END0
push constant 2
push local 0
call Math.multiply 2
push constant 1
add
pop local 5
push constant 2
push local 0
call Math.multiply 2
push this 0
call Math.multiply 2
pop local 3
push local 5
push this 0
call Math.multiply 2
pop local 4
push local 6
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 1
push this 1
pop local 2
push argument 1
push local 1
gt
push argument 1
push local 2
lt
and
push argument 2
push local 4
lt
and
push argument 2
push local 3
gt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push argument 1
push this 3
add
push local 1
gt
push argument 1
push this 3
add
push local 2
lt
and
push argument 2
push local 4
lt
and
push argument 2
push local 3
gt
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
return
label IF_FALSE2
push argument 1
push local 1
gt
push argument 1
push local 2
lt
and
push argument 2
push this 3
add
push local 4
lt
and
push argument 2
push this 3
add
push local 3
gt
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
return
label IF_FALSE3
push argument 1
push this 3
add
push local 1
gt
push argument 1
push this 3
add
push local 2
lt
and
push argument 2
push this 3
add
push local 4
lt
and
push argument 2
push this 3
add
push local 3
gt
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
return
label IF_FALSE4
goto IF_END0
label IF_FALSE0
push constant 512
push this 1
sub
pop local 1
push constant 511
pop local 2
push argument 1
push local 1
gt
push argument 1
push local 2
lt
and
push argument 2
push local 4
lt
and
push argument 2
push local 3
gt
and
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
return
label IF_FALSE5
push argument 1
push this 3
add
push local 1
gt
push argument 1
push this 3
add
push local 2
lt
and
push argument 2
push local 4
lt
and
push argument 2
push local 3
gt
and
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
return
label IF_FALSE6
push argument 1
push local 1
gt
push argument 1
push local 2
lt
and
push argument 2
push this 3
add
push local 4
lt
and
push argument 2
push this 3
add
push local 3
gt
and
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 0
return
label IF_FALSE7
push argument 1
push this 3
add
push local 1
gt
push argument 1
push this 3
add
push local 2
lt
and
push argument 2
push this 3
add
push local 4
lt
and
push argument 2
push this 3
add
push local 3
gt
and
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push constant 0
return
label IF_FALSE8
label IF_END0
push local 0
push constant 1
add
pop local 0
push local 6
not
pop local 6
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
return
function Maze.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
